{"/Users/spragn01/workspace/node/sqs-consumer/src/index.ts":{"path":"/Users/spragn01/workspace/node/sqs-consumer/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":115}},"3":{"start":{"line":4,"column":82},"end":{"line":4,"column":109}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":68},"end":{"line":4,"column":69}},"loc":{"start":{"line":4,"column":80},"end":{"line":4,"column":111}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":52},"f":{"0":52},"b":{},"inputSourceMap":{"version":3,"file":"/Users/spragn01/workspace/node/sqs-consumer/src/index.ts","sources":["/Users/spragn01/workspace/node/sqs-consumer/src/index.ts"],"names":[],"mappings":";;AAAA,uCAAuD;AAA9C,oGAAA,QAAQ,OAAA","sourcesContent":["export { Consumer, ConsumerOptions } from './consumer';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f6e643d9f52f434b5f64175187cc9624531d52f5","contentHash":"9c914ef161e0e77828b2fbb216be8aafed7ca3aee23ff23787047bc2c0c99c54"},"/Users/spragn01/workspace/node/sqs-consumer/src/consumer.ts":{"path":"/Users/spragn01/workspace/node/sqs-consumer/src/consumer.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":12},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":30}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":34}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":32}},"6":{"start":{"line":8,"column":17},"end":{"line":8,"column":36}},"7":{"start":{"line":9,"column":14},"end":{"line":9,"column":35}},"8":{"start":{"line":10,"column":24},"end":{"line":14,"column":1}},"9":{"start":{"line":17,"column":20},"end":{"line":21,"column":6}},"10":{"start":{"line":18,"column":8},"end":{"line":20,"column":21}},"11":{"start":{"line":19,"column":12},"end":{"line":19,"column":48}},"12":{"start":{"line":22,"column":4},"end":{"line":22,"column":30}},"13":{"start":{"line":25,"column":4},"end":{"line":30,"column":7}},"14":{"start":{"line":26,"column":30},"end":{"line":26,"column":47}},"15":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"16":{"start":{"line":27,"column":39},"end":{"line":27,"column":49}},"17":{"start":{"line":28,"column":12},"end":{"line":28,"column":94}},"18":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"19":{"start":{"line":32,"column":8},"end":{"line":32,"column":74}},"20":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"21":{"start":{"line":37,"column":8},"end":{"line":37,"column":109}},"22":{"start":{"line":39,"column":4},"end":{"line":39,"column":17}},"23":{"start":{"line":42,"column":21},"end":{"line":42,"column":51}},"24":{"start":{"line":43,"column":4},"end":{"line":43,"column":29}},"25":{"start":{"line":44,"column":4},"end":{"line":44,"column":41}},"26":{"start":{"line":45,"column":4},"end":{"line":45,"column":33}},"27":{"start":{"line":46,"column":4},"end":{"line":46,"column":39}},"28":{"start":{"line":47,"column":4},"end":{"line":47,"column":37}},"29":{"start":{"line":48,"column":4},"end":{"line":48,"column":29}},"30":{"start":{"line":49,"column":4},"end":{"line":49,"column":20}},"31":{"start":{"line":52,"column":4},"end":{"line":52,"column":61}},"32":{"start":{"line":56,"column":8},"end":{"line":56,"column":16}},"33":{"start":{"line":57,"column":8},"end":{"line":57,"column":31}},"34":{"start":{"line":58,"column":8},"end":{"line":58,"column":41}},"35":{"start":{"line":59,"column":8},"end":{"line":59,"column":51}},"36":{"start":{"line":60,"column":8},"end":{"line":60,"column":61}},"37":{"start":{"line":61,"column":8},"end":{"line":61,"column":65}},"38":{"start":{"line":62,"column":8},"end":{"line":62,"column":59}},"39":{"start":{"line":63,"column":8},"end":{"line":63,"column":73}},"40":{"start":{"line":64,"column":8},"end":{"line":64,"column":28}},"41":{"start":{"line":65,"column":8},"end":{"line":65,"column":48}},"42":{"start":{"line":66,"column":8},"end":{"line":66,"column":59}},"43":{"start":{"line":67,"column":8},"end":{"line":67,"column":86}},"44":{"start":{"line":68,"column":8},"end":{"line":68,"column":61}},"45":{"start":{"line":69,"column":8},"end":{"line":69,"column":86}},"46":{"start":{"line":70,"column":8},"end":{"line":70,"column":64}},"47":{"start":{"line":71,"column":8},"end":{"line":73,"column":11}},"48":{"start":{"line":74,"column":8},"end":{"line":74,"column":30}},"49":{"start":{"line":77,"column":8},"end":{"line":77,"column":29}},"50":{"start":{"line":80,"column":8},"end":{"line":80,"column":37}},"51":{"start":{"line":83,"column":8},"end":{"line":87,"column":9}},"52":{"start":{"line":84,"column":12},"end":{"line":84,"column":39}},"53":{"start":{"line":85,"column":12},"end":{"line":85,"column":33}},"54":{"start":{"line":86,"column":12},"end":{"line":86,"column":24}},"55":{"start":{"line":90,"column":8},"end":{"line":90,"column":35}},"56":{"start":{"line":91,"column":8},"end":{"line":91,"column":28}},"57":{"start":{"line":94,"column":8},"end":{"line":94,"column":39}},"58":{"start":{"line":95,"column":8},"end":{"line":95,"column":24}},"59":{"start":{"line":96,"column":8},"end":{"line":110,"column":9}},"60":{"start":{"line":97,"column":12},"end":{"line":109,"column":13}},"61":{"start":{"line":98,"column":16},"end":{"line":104,"column":17}},"62":{"start":{"line":100,"column":20},"end":{"line":100,"column":70}},"63":{"start":{"line":103,"column":20},"end":{"line":103,"column":82}},"64":{"start":{"line":105,"column":16},"end":{"line":105,"column":48}},"65":{"start":{"line":108,"column":16},"end":{"line":108,"column":35}},"66":{"start":{"line":113,"column":8},"end":{"line":113,"column":47}},"67":{"start":{"line":114,"column":8},"end":{"line":129,"column":9}},"68":{"start":{"line":115,"column":12},"end":{"line":115,"column":47}},"69":{"start":{"line":116,"column":12},"end":{"line":116,"column":46}},"70":{"start":{"line":117,"column":12},"end":{"line":117,"column":52}},"71":{"start":{"line":120,"column":12},"end":{"line":120,"column":41}},"72":{"start":{"line":121,"column":12},"end":{"line":128,"column":13}},"73":{"start":{"line":122,"column":16},"end":{"line":127,"column":17}},"74":{"start":{"line":123,"column":20},"end":{"line":123,"column":67}},"75":{"start":{"line":126,"column":20},"end":{"line":126,"column":53}},"76":{"start":{"line":132,"column":8},"end":{"line":139,"column":9}},"77":{"start":{"line":133,"column":12},"end":{"line":135,"column":27}},"78":{"start":{"line":138,"column":12},"end":{"line":138,"column":80}},"79":{"start":{"line":142,"column":8},"end":{"line":142,"column":56}},"80":{"start":{"line":143,"column":29},"end":{"line":146,"column":9}},"81":{"start":{"line":147,"column":8},"end":{"line":154,"column":9}},"82":{"start":{"line":148,"column":12},"end":{"line":150,"column":27}},"83":{"start":{"line":153,"column":12},"end":{"line":153,"column":79}},"84":{"start":{"line":159,"column":8},"end":{"line":182,"column":9}},"85":{"start":{"line":160,"column":12},"end":{"line":169,"column":13}},"86":{"start":{"line":161,"column":16},"end":{"line":161,"column":78}},"87":{"start":{"line":162,"column":16},"end":{"line":165,"column":19}},"88":{"start":{"line":168,"column":16},"end":{"line":168,"column":50}},"89":{"start":{"line":172,"column":12},"end":{"line":177,"column":13}},"90":{"start":{"line":173,"column":16},"end":{"line":173,"column":117}},"91":{"start":{"line":176,"column":16},"end":{"line":176,"column":83}},"92":{"start":{"line":178,"column":12},"end":{"line":178,"column":22}},"93":{"start":{"line":181,"column":12},"end":{"line":181,"column":34}},"94":{"start":{"line":185,"column":8},"end":{"line":191,"column":23}},"95":{"start":{"line":194,"column":8},"end":{"line":202,"column":9}},"96":{"start":{"line":195,"column":12},"end":{"line":195,"column":45}},"97":{"start":{"line":197,"column":13},"end":{"line":202,"column":9}},"98":{"start":{"line":198,"column":12},"end":{"line":198,"column":53}},"99":{"start":{"line":201,"column":12},"end":{"line":201,"column":56}},"100":{"start":{"line":205,"column":8},"end":{"line":208,"column":9}},"101":{"start":{"line":206,"column":12},"end":{"line":206,"column":33}},"102":{"start":{"line":207,"column":12},"end":{"line":207,"column":19}},"103":{"start":{"line":209,"column":8},"end":{"line":209,"column":38}},"104":{"start":{"line":210,"column":30},"end":{"line":217,"column":9}},"105":{"start":{"line":218,"column":36},"end":{"line":218,"column":58}},"106":{"start":{"line":219,"column":8},"end":{"line":232,"column":11}},"107":{"start":{"line":222,"column":12},"end":{"line":222,"column":36}},"108":{"start":{"line":223,"column":12},"end":{"line":226,"column":13}},"109":{"start":{"line":224,"column":16},"end":{"line":224,"column":85}},"110":{"start":{"line":225,"column":16},"end":{"line":225,"column":72}},"111":{"start":{"line":227,"column":12},"end":{"line":227,"column":19}},"112":{"start":{"line":229,"column":12},"end":{"line":229,"column":57}},"113":{"start":{"line":231,"column":12},"end":{"line":231,"column":36}},"114":{"start":{"line":235,"column":8},"end":{"line":237,"column":11}},"115":{"start":{"line":236,"column":12},"end":{"line":236,"column":51}},"116":{"start":{"line":238,"column":8},"end":{"line":255,"column":9}},"117":{"start":{"line":239,"column":12},"end":{"line":239,"column":53}},"118":{"start":{"line":240,"column":12},"end":{"line":240,"column":52}},"119":{"start":{"line":241,"column":12},"end":{"line":243,"column":15}},"120":{"start":{"line":242,"column":16},"end":{"line":242,"column":56}},"121":{"start":{"line":246,"column":12},"end":{"line":246,"column":46}},"122":{"start":{"line":247,"column":12},"end":{"line":254,"column":13}},"123":{"start":{"line":248,"column":16},"end":{"line":253,"column":17}},"124":{"start":{"line":249,"column":20},"end":{"line":249,"column":73}},"125":{"start":{"line":252,"column":20},"end":{"line":252,"column":54}},"126":{"start":{"line":258,"column":8},"end":{"line":258,"column":87}},"127":{"start":{"line":258,"column":60},"end":{"line":258,"column":73}},"128":{"start":{"line":259,"column":29},"end":{"line":265,"column":9}},"129":{"start":{"line":261,"column":48},"end":{"line":264,"column":13}},"130":{"start":{"line":266,"column":8},"end":{"line":273,"column":9}},"131":{"start":{"line":267,"column":12},"end":{"line":269,"column":27}},"132":{"start":{"line":272,"column":12},"end":{"line":272,"column":79}},"133":{"start":{"line":276,"column":8},"end":{"line":282,"column":9}},"134":{"start":{"line":277,"column":12},"end":{"line":277,"column":52}},"135":{"start":{"line":280,"column":12},"end":{"line":280,"column":79}},"136":{"start":{"line":281,"column":12},"end":{"line":281,"column":22}},"137":{"start":{"line":285,"column":23},"end":{"line":292,"column":9}},"138":{"start":{"line":287,"column":48},"end":{"line":291,"column":13}},"139":{"start":{"line":293,"column":8},"end":{"line":295,"column":23}},"140":{"start":{"line":298,"column":0},"end":{"line":298,"column":28}}},"fnMap":{"0":{"name":"createTimeout","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":22}},"loc":{"start":{"line":15,"column":33},"end":{"line":23,"column":1}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":32},"end":{"line":17,"column":33}},"loc":{"start":{"line":17,"column":47},"end":{"line":21,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":29},"end":{"line":18,"column":30}},"loc":{"start":{"line":18,"column":35},"end":{"line":20,"column":9}},"line":18},"3":{"name":"assertOptions","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":22}},"loc":{"start":{"line":24,"column":32},"end":{"line":34,"column":1}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":28},"end":{"line":25,"column":29}},"loc":{"start":{"line":25,"column":40},"end":{"line":30,"column":5}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":27,"column":32},"end":{"line":27,"column":33}},"loc":{"start":{"line":27,"column":39},"end":{"line":27,"column":49}},"line":27},"6":{"name":"isConnectionError","decl":{"start":{"line":35,"column":9},"end":{"line":35,"column":26}},"loc":{"start":{"line":35,"column":32},"end":{"line":40,"column":1}},"line":35},"7":{"name":"toSQSError","decl":{"start":{"line":41,"column":9},"end":{"line":41,"column":19}},"loc":{"start":{"line":41,"column":34},"end":{"line":50,"column":1}},"line":41},"8":{"name":"hasMessages","decl":{"start":{"line":51,"column":9},"end":{"line":51,"column":20}},"loc":{"start":{"line":51,"column":31},"end":{"line":53,"column":1}},"line":51},"9":{"name":"(anonymous_9)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":25},"end":{"line":75,"column":5}},"line":55},"10":{"name":"(anonymous_10)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":20},"end":{"line":78,"column":5}},"line":76},"11":{"name":"(anonymous_11)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":27},"end":{"line":81,"column":5}},"line":79},"12":{"name":"(anonymous_12)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":12},"end":{"line":88,"column":5}},"line":82},"13":{"name":"(anonymous_13)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":11},"end":{"line":92,"column":5}},"line":89},"14":{"name":"(anonymous_14)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":38},"end":{"line":111,"column":5}},"line":93},"15":{"name":"(anonymous_15)","decl":{"start":{"line":112,"column":4},"end":{"line":112,"column":5}},"loc":{"start":{"line":112,"column":34},"end":{"line":130,"column":5}},"line":112},"16":{"name":"(anonymous_16)","decl":{"start":{"line":131,"column":4},"end":{"line":131,"column":5}},"loc":{"start":{"line":131,"column":33},"end":{"line":140,"column":5}},"line":131},"17":{"name":"(anonymous_17)","decl":{"start":{"line":141,"column":4},"end":{"line":141,"column":5}},"loc":{"start":{"line":141,"column":33},"end":{"line":155,"column":5}},"line":141},"18":{"name":"(anonymous_18)","decl":{"start":{"line":156,"column":4},"end":{"line":156,"column":5}},"loc":{"start":{"line":156,"column":34},"end":{"line":183,"column":5}},"line":156},"19":{"name":"(anonymous_19)","decl":{"start":{"line":184,"column":4},"end":{"line":184,"column":5}},"loc":{"start":{"line":184,"column":46},"end":{"line":192,"column":5}},"line":184},"20":{"name":"(anonymous_20)","decl":{"start":{"line":193,"column":4},"end":{"line":193,"column":5}},"loc":{"start":{"line":193,"column":28},"end":{"line":203,"column":5}},"line":193},"21":{"name":"(anonymous_21)","decl":{"start":{"line":204,"column":4},"end":{"line":204,"column":5}},"loc":{"start":{"line":204,"column":11},"end":{"line":233,"column":5}},"line":204},"22":{"name":"(anonymous_22)","decl":{"start":{"line":221,"column":19},"end":{"line":221,"column":20}},"loc":{"start":{"line":221,"column":28},"end":{"line":228,"column":9}},"line":221},"23":{"name":"(anonymous_23)","decl":{"start":{"line":228,"column":16},"end":{"line":228,"column":17}},"loc":{"start":{"line":228,"column":22},"end":{"line":230,"column":9}},"line":228},"24":{"name":"(anonymous_24)","decl":{"start":{"line":230,"column":17},"end":{"line":230,"column":18}},"loc":{"start":{"line":230,"column":26},"end":{"line":232,"column":9}},"line":230},"25":{"name":"(anonymous_25)","decl":{"start":{"line":234,"column":4},"end":{"line":234,"column":5}},"loc":{"start":{"line":234,"column":40},"end":{"line":256,"column":5}},"line":234},"26":{"name":"(anonymous_26)","decl":{"start":{"line":235,"column":25},"end":{"line":235,"column":26}},"loc":{"start":{"line":235,"column":38},"end":{"line":237,"column":9}},"line":235},"27":{"name":"(anonymous_27)","decl":{"start":{"line":241,"column":29},"end":{"line":241,"column":30}},"loc":{"start":{"line":241,"column":42},"end":{"line":243,"column":13}},"line":241},"28":{"name":"(anonymous_28)","decl":{"start":{"line":257,"column":4},"end":{"line":257,"column":5}},"loc":{"start":{"line":257,"column":39},"end":{"line":274,"column":5}},"line":257},"29":{"name":"(anonymous_29)","decl":{"start":{"line":258,"column":51},"end":{"line":258,"column":52}},"loc":{"start":{"line":258,"column":60},"end":{"line":258,"column":73}},"line":258},"30":{"name":"(anonymous_30)","decl":{"start":{"line":261,"column":34},"end":{"line":261,"column":35}},"loc":{"start":{"line":261,"column":48},"end":{"line":264,"column":13}},"line":261},"31":{"name":"(anonymous_31)","decl":{"start":{"line":275,"column":4},"end":{"line":275,"column":5}},"loc":{"start":{"line":275,"column":40},"end":{"line":283,"column":5}},"line":275},"32":{"name":"(anonymous_32)","decl":{"start":{"line":284,"column":4},"end":{"line":284,"column":5}},"loc":{"start":{"line":284,"column":52},"end":{"line":296,"column":5}},"line":284},"33":{"name":"(anonymous_33)","decl":{"start":{"line":287,"column":34},"end":{"line":287,"column":35}},"loc":{"start":{"line":287,"column":48},"end":{"line":291,"column":13}},"line":287}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},{"start":{"line":27,"column":8},"end":{"line":29,"column":9}}],"line":27},"1":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{"line":31,"column":4},"end":{"line":33,"column":5}}],"line":31},"2":{"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":55}},"type":"binary-expr","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":30}},{"start":{"line":31,"column":34},"end":{"line":31,"column":55}}],"line":31},"3":{"loc":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},{"start":{"line":36,"column":4},"end":{"line":38,"column":5}}],"line":36},"4":{"loc":{"start":{"line":37,"column":16},"end":{"line":37,"column":107}},"type":"binary-expr","locations":[{"start":{"line":37,"column":16},"end":{"line":37,"column":38}},{"start":{"line":37,"column":42},"end":{"line":37,"column":73}},{"start":{"line":37,"column":77},"end":{"line":37,"column":107}}],"line":37},"5":{"loc":{"start":{"line":52,"column":11},"end":{"line":52,"column":60}},"type":"binary-expr","locations":[{"start":{"line":52,"column":11},"end":{"line":52,"column":28}},{"start":{"line":52,"column":32},"end":{"line":52,"column":60}}],"line":52},"6":{"loc":{"start":{"line":62,"column":30},"end":{"line":62,"column":58}},"type":"binary-expr","locations":[{"start":{"line":62,"column":30},"end":{"line":62,"column":52}},{"start":{"line":62,"column":56},"end":{"line":62,"column":58}}],"line":62},"7":{"loc":{"start":{"line":63,"column":37},"end":{"line":63,"column":72}},"type":"binary-expr","locations":[{"start":{"line":63,"column":37},"end":{"line":63,"column":66}},{"start":{"line":63,"column":70},"end":{"line":63,"column":72}}],"line":63},"8":{"loc":{"start":{"line":65,"column":25},"end":{"line":65,"column":47}},"type":"binary-expr","locations":[{"start":{"line":65,"column":25},"end":{"line":65,"column":42}},{"start":{"line":65,"column":46},"end":{"line":65,"column":47}}],"line":65},"9":{"loc":{"start":{"line":67,"column":42},"end":{"line":67,"column":85}},"type":"binary-expr","locations":[{"start":{"line":67,"column":42},"end":{"line":67,"column":76}},{"start":{"line":67,"column":80},"end":{"line":67,"column":85}}],"line":67},"10":{"loc":{"start":{"line":68,"column":31},"end":{"line":68,"column":60}},"type":"binary-expr","locations":[{"start":{"line":68,"column":31},"end":{"line":68,"column":54}},{"start":{"line":68,"column":58},"end":{"line":68,"column":60}}],"line":68},"11":{"loc":{"start":{"line":69,"column":42},"end":{"line":69,"column":85}},"type":"binary-expr","locations":[{"start":{"line":69,"column":42},"end":{"line":69,"column":76}},{"start":{"line":69,"column":80},"end":{"line":69,"column":85}}],"line":69},"12":{"loc":{"start":{"line":70,"column":33},"end":{"line":70,"column":63}},"type":"binary-expr","locations":[{"start":{"line":70,"column":33},"end":{"line":70,"column":58}},{"start":{"line":70,"column":62},"end":{"line":70,"column":63}}],"line":70},"13":{"loc":{"start":{"line":71,"column":19},"end":{"line":73,"column":10}},"type":"binary-expr","locations":[{"start":{"line":71,"column":19},"end":{"line":71,"column":30}},{"start":{"line":71,"column":34},"end":{"line":73,"column":10}}],"line":71},"14":{"loc":{"start":{"line":72,"column":20},"end":{"line":72,"column":75}},"type":"binary-expr","locations":[{"start":{"line":72,"column":20},"end":{"line":72,"column":34}},{"start":{"line":72,"column":38},"end":{"line":72,"column":60}},{"start":{"line":72,"column":64},"end":{"line":72,"column":75}}],"line":72},"15":{"loc":{"start":{"line":83,"column":8},"end":{"line":87,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":87,"column":9}},{"start":{"line":83,"column":8},"end":{"line":87,"column":9}}],"line":83},"16":{"loc":{"start":{"line":96,"column":8},"end":{"line":110,"column":9}},"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":110,"column":9}},{"start":{"line":96,"column":8},"end":{"line":110,"column":9}}],"line":96},"17":{"loc":{"start":{"line":97,"column":12},"end":{"line":109,"column":13}},"type":"if","locations":[{"start":{"line":97,"column":12},"end":{"line":109,"column":13}},{"start":{"line":97,"column":12},"end":{"line":109,"column":13}}],"line":97},"18":{"loc":{"start":{"line":98,"column":16},"end":{"line":104,"column":17}},"type":"if","locations":[{"start":{"line":98,"column":16},"end":{"line":104,"column":17}},{"start":{"line":98,"column":16},"end":{"line":104,"column":17}}],"line":98},"19":{"loc":{"start":{"line":121,"column":12},"end":{"line":128,"column":13}},"type":"if","locations":[{"start":{"line":121,"column":12},"end":{"line":128,"column":13}},{"start":{"line":121,"column":12},"end":{"line":128,"column":13}}],"line":121},"20":{"loc":{"start":{"line":160,"column":12},"end":{"line":169,"column":13}},"type":"if","locations":[{"start":{"line":160,"column":12},"end":{"line":169,"column":13}},{"start":{"line":160,"column":12},"end":{"line":169,"column":13}}],"line":160},"21":{"loc":{"start":{"line":172,"column":12},"end":{"line":177,"column":13}},"type":"if","locations":[{"start":{"line":172,"column":12},"end":{"line":177,"column":13}},{"start":{"line":172,"column":12},"end":{"line":177,"column":13}}],"line":172},"22":{"loc":{"start":{"line":194,"column":8},"end":{"line":202,"column":9}},"type":"if","locations":[{"start":{"line":194,"column":8},"end":{"line":202,"column":9}},{"start":{"line":194,"column":8},"end":{"line":202,"column":9}}],"line":194},"23":{"loc":{"start":{"line":197,"column":13},"end":{"line":202,"column":9}},"type":"if","locations":[{"start":{"line":197,"column":13},"end":{"line":202,"column":9}},{"start":{"line":197,"column":13},"end":{"line":202,"column":9}}],"line":197},"24":{"loc":{"start":{"line":205,"column":8},"end":{"line":208,"column":9}},"type":"if","locations":[{"start":{"line":205,"column":8},"end":{"line":208,"column":9}},{"start":{"line":205,"column":8},"end":{"line":208,"column":9}}],"line":205},"25":{"loc":{"start":{"line":223,"column":12},"end":{"line":226,"column":13}},"type":"if","locations":[{"start":{"line":223,"column":12},"end":{"line":226,"column":13}},{"start":{"line":223,"column":12},"end":{"line":226,"column":13}}],"line":223},"26":{"loc":{"start":{"line":247,"column":12},"end":{"line":254,"column":13}},"type":"if","locations":[{"start":{"line":247,"column":12},"end":{"line":254,"column":13}},{"start":{"line":247,"column":12},"end":{"line":254,"column":13}}],"line":247}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":51,"14":101,"15":101,"16":103,"17":2,"18":49,"19":2,"20":11,"21":11,"22":0,"23":13,"24":13,"25":13,"26":13,"27":13,"28":13,"29":13,"30":13,"31":31,"32":51,"33":51,"34":47,"35":47,"36":47,"37":47,"38":47,"39":47,"40":47,"41":47,"42":47,"43":47,"44":47,"45":47,"46":47,"47":47,"48":47,"49":49,"50":2,"51":38,"52":34,"53":34,"54":34,"55":36,"56":36,"57":31,"58":31,"59":31,"60":31,"61":30,"62":2,"63":28,"64":30,"65":1,"66":31,"67":31,"68":31,"69":24,"70":22,"71":9,"72":9,"73":2,"74":2,"75":1,"76":43,"77":43,"78":11,"79":24,"80":24,"81":24,"82":24,"83":2,"84":31,"85":31,"86":1,"87":1,"88":30,"89":7,"90":1,"91":6,"92":7,"93":31,"94":2,"95":9,"96":2,"97":7,"98":1,"99":6,"100":74,"101":31,"102":31,"103":43,"104":43,"105":43,"106":43,"107":11,"108":11,"109":10,"110":10,"111":11,"112":42,"113":0,"114":2,"115":2,"116":2,"117":2,"118":2,"119":2,"120":2,"121":0,"122":0,"123":0,"124":0,"125":0,"126":2,"127":2,"128":2,"129":2,"130":2,"131":2,"132":0,"133":2,"134":2,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1},"f":{"0":1,"1":1,"2":1,"3":51,"4":101,"5":103,"6":11,"7":13,"8":31,"9":51,"10":49,"11":2,"12":38,"13":36,"14":31,"15":31,"16":43,"17":24,"18":31,"19":2,"20":9,"21":74,"22":11,"23":42,"24":0,"25":2,"26":2,"27":2,"28":2,"29":2,"30":2,"31":2,"32":0,"33":0},"b":{"0":[2,99],"1":[2,47],"2":[49,48],"3":[11,0],"4":[11,7,4],"5":[31,30],"6":[47,46],"7":[47,43],"8":[47,42],"9":[47,47],"10":[47,46],"11":[47,6],"12":[47,46],"13":[47,1],"14":[1,0,0],"15":[34,4],"16":[31,0],"17":[30,1],"18":[2,28],"19":[2,7],"20":[1,30],"21":[1,6],"22":[2,7],"23":[1,6],"24":[31,43],"25":[10,1],"26":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/spragn01/workspace/node/sqs-consumer/src/consumer.ts","sources":["/Users/spragn01/workspace/node/sqs-consumer/src/consumer.ts"],"names":[],"mappings":"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","sourcesContent":["import { AWSError } from 'aws-sdk';\nimport * as SQS from 'aws-sdk/clients/sqs';\nimport { PromiseResult } from 'aws-sdk/lib/request';\nimport * as Debug from 'debug';\nimport { EventEmitter } from 'events';\nimport { autoBind } from './bind';\nimport { SQSError, TimeoutError } from './errors';\n\nconst debug = Debug('sqs-consumer');\n\ntype ReceieveMessageResponse = PromiseResult<SQS.Types.ReceiveMessageResult, AWSError>;\ntype SQSMessage = SQS.Types.Message;\ntype ReceiveMessageRequest = SQS.Types.ReceiveMessageRequest;\n\nconst requiredOptions = [\n  'queueUrl',\n  // only one of handleMessage / handleMessagesBatch is required\n  'handleMessage|handleMessageBatch'\n];\n\ninterface TimeoutResponse {\n  timeout: NodeJS.Timeout;\n  pending: Promise<void>;\n}\n\nfunction createTimeout(duration: number): TimeoutResponse[] {\n  let timeout;\n  const pending = new Promise((_, reject) => {\n    timeout = setTimeout((): void => {\n      reject(new TimeoutError());\n    }, duration);\n  });\n  return [timeout, pending];\n}\n\nfunction assertOptions(options: ConsumerOptions): void {\n  requiredOptions.forEach((option) => {\n    const possibilities = option.split('|');\n    if (!possibilities.find((p) => options[p])) {\n      throw new Error(`Missing SQS consumer option [ ${possibilities.join(' or ')} ].`);\n    }\n  });\n\n  if (options.batchSize > 10 || options.batchSize < 1) {\n    throw new Error('SQS batchSize option must be between 1 and 10.');\n  }\n}\n\nfunction isConnectionError(err: Error): boolean {\n  if (err instanceof SQSError) {\n    return (err.statusCode === 403 || err.code === 'CredentialsError' || err.code === 'UnknownEndpoint');\n  }\n  return false;\n}\n\nfunction toSQSError(err: AWSError, message: string): SQSError {\n  const sqsError = new SQSError(message);\n  sqsError.code = err.code;\n  sqsError.statusCode = err.statusCode;\n  sqsError.region = err.region;\n  sqsError.retryable = err.retryable;\n  sqsError.hostname = err.hostname;\n  sqsError.time = err.time;\n\n  return sqsError;\n}\n\nfunction hasMessages(response: ReceieveMessageResponse): boolean {\n  return response.Messages && response.Messages.length > 0;\n}\n\nexport interface ConsumerOptions {\n  queueUrl?: string;\n  attributeNames?: string[];\n  messageAttributeNames?: string[];\n  stopped?: boolean;\n  batchSize?: number;\n  visibilityTimeout?: number;\n  waitTimeSeconds?: number;\n  authenticationErrorTimeout?: number;\n  pollingWaitTimeMs?: number;\n  terminateVisibilityTimeout?: boolean;\n  sqs?: SQS;\n  region?: string;\n  handleMessageTimeout?: number;\n  handleMessage?(message: SQSMessage): Promise<void>;\n  handleMessageBatch?(messages: SQSMessage[]): Promise<void>;\n}\n\nexport class Consumer extends EventEmitter {\n  private queueUrl: string;\n  private handleMessage: (message: SQSMessage) => Promise<void>;\n  private handleMessageBatch: (message: SQSMessage[]) => Promise<void>;\n  private handleMessageTimeout: number;\n  private attributeNames: string[];\n  private messageAttributeNames: string[];\n  private stopped: boolean;\n  private batchSize: number;\n  private visibilityTimeout: number;\n  private waitTimeSeconds: number;\n  private authenticationErrorTimeout: number;\n  private pollingWaitTimeMs: number;\n  private terminateVisibilityTimeout: boolean;\n  private sqs: SQS;\n\n  constructor(options: ConsumerOptions) {\n    super();\n    assertOptions(options);\n    this.queueUrl = options.queueUrl;\n    this.handleMessage = options.handleMessage;\n    this.handleMessageBatch = options.handleMessageBatch;\n    this.handleMessageTimeout = options.handleMessageTimeout;\n    this.attributeNames = options.attributeNames || [];\n    this.messageAttributeNames = options.messageAttributeNames || [];\n    this.stopped = true;\n    this.batchSize = options.batchSize || 1;\n    this.visibilityTimeout = options.visibilityTimeout;\n    this.terminateVisibilityTimeout = options.terminateVisibilityTimeout || false;\n    this.waitTimeSeconds = options.waitTimeSeconds || 20;\n    this.authenticationErrorTimeout = options.authenticationErrorTimeout || 10000;\n    this.pollingWaitTimeMs = options.pollingWaitTimeMs || 0;\n\n    this.sqs = options.sqs || new SQS({\n      region: options.region || process.env.AWS_REGION || 'eu-west-1'\n    });\n\n    autoBind(this);\n  }\n\n  public get isRunning(): boolean {\n    return !this.stopped;\n  }\n\n  public static create(options: ConsumerOptions): Consumer {\n    return new Consumer(options);\n  }\n\n  public start(): void {\n    if (this.stopped) {\n      debug('Starting consumer');\n      this.stopped = false;\n      this.poll();\n    }\n  }\n\n  public stop(): void {\n    debug('Stopping consumer');\n    this.stopped = true;\n  }\n\n  private async handleSqsResponse(response: ReceieveMessageResponse): Promise<void> {\n    debug('Received SQS response');\n    debug(response);\n\n    if (response) {\n      if (hasMessages(response)) {\n        if (this.handleMessageBatch) {\n          // prefer handling messages in batch when available\n          await this.processMessageBatch(response.Messages);\n        } else {\n          await Promise.all(response.Messages.map(this.processMessage));\n        }\n        this.emit('response_processed');\n      } else {\n        this.emit('empty');\n      }\n    }\n  }\n\n  private async processMessage(message: SQSMessage): Promise<void> {\n    this.emit('message_received', message);\n\n    try {\n      await this.executeHandler(message);\n      await this.deleteMessage(message);\n      this.emit('message_processed', message);\n    } catch (err) {\n      this.emitError(err, message);\n\n      if (this.terminateVisibilityTimeout) {\n        try {\n          await this.terminateVisabilityTimeout(message);\n        } catch (err) {\n          this.emit('error', err, message);\n        }\n      }\n    }\n  }\n\n  private async receiveMessage(params: ReceiveMessageRequest): Promise<ReceieveMessageResponse> {\n    try {\n      return await this.sqs\n        .receiveMessage(params)\n        .promise();\n    } catch (err) {\n      throw toSQSError(err, `SQS receive message failed: ${err.message}`);\n    }\n  }\n\n  private async deleteMessage(message: SQSMessage): Promise<void> {\n    debug('Deleting message %s', message.MessageId);\n\n    const deleteParams = {\n      QueueUrl: this.queueUrl,\n      ReceiptHandle: message.ReceiptHandle\n    };\n\n    try {\n      await this.sqs\n        .deleteMessage(deleteParams)\n        .promise();\n    } catch (err) {\n      throw toSQSError(err, `SQS delete message failed: ${err.message}`);\n    }\n  }\n\n  private async executeHandler(message: SQSMessage): Promise<void> {\n    let timeout;\n    let pending;\n    try {\n      if (this.handleMessageTimeout) {\n        [timeout, pending] = createTimeout(this.handleMessageTimeout);\n        await Promise.race([\n          this.handleMessage(message),\n          pending\n        ]);\n      } else {\n        await this.handleMessage(message);\n      }\n    } catch (err) {\n      if (err instanceof TimeoutError) {\n        err.message = `Message handler timed out after ${this.handleMessageTimeout}ms: Operation timed out.`;\n      } else {\n        err.message = `Unexpected message handler failure: ${err.message}`;\n      }\n      throw err;\n    } finally {\n      clearTimeout(timeout);\n    }\n  }\n\n  private async terminateVisabilityTimeout(message: SQSMessage): Promise<PromiseResult<any, AWSError>> {\n    return this.sqs\n      .changeMessageVisibility({\n        QueueUrl: this.queueUrl,\n        ReceiptHandle: message.ReceiptHandle,\n        VisibilityTimeout: 0\n      })\n      .promise();\n  }\n\n  private emitError(err: Error, message: SQSMessage): void {\n    if (err.name === SQSError.name) {\n      this.emit('error', err, message);\n    } else if (err instanceof TimeoutError) {\n      this.emit('timeout_error', err, message);\n    } else {\n      this.emit('processing_error', err, message);\n    }\n  }\n\n  private poll(): void {\n    if (this.stopped) {\n      this.emit('stopped');\n      return;\n    }\n\n    debug('Polling for messages');\n    const receiveParams = {\n      QueueUrl: this.queueUrl,\n      AttributeNames: this.attributeNames,\n      MessageAttributeNames: this.messageAttributeNames,\n      MaxNumberOfMessages: this.batchSize,\n      WaitTimeSeconds: this.waitTimeSeconds,\n      VisibilityTimeout: this.visibilityTimeout\n    };\n\n    let currentPollingTimeout = this.pollingWaitTimeMs;\n    this.receiveMessage(receiveParams)\n      .then(this.handleSqsResponse)\n      .catch((err) => {\n        this.emit('error', err);\n        if (isConnectionError(err)) {\n          debug('There was an authentication error. Pausing before retrying.');\n          currentPollingTimeout = this.authenticationErrorTimeout;\n        }\n        return;\n      }).then(() => {\n        setTimeout(this.poll, currentPollingTimeout);\n      }).catch((err) => {\n        this.emit('error', err);\n      });\n  }\n\n  private async processMessageBatch(messages: SQSMessage[]): Promise<void> {\n    messages.forEach((message) => {\n      this.emit('message_received', message);\n    });\n\n    try {\n      await this.executeBatchHandler(messages);\n      await this.deleteMessageBatch(messages);\n      messages.forEach((message) => {\n        this.emit('message_processed', message);\n      });\n    } catch (err) {\n      this.emit('error', err, messages);\n\n      if (this.terminateVisibilityTimeout) {\n        try {\n          await this.terminateVisabilityTimeoutBatch(messages);\n        } catch (err) {\n          this.emit('error', err, messages);\n        }\n      }\n    }\n  }\n\n  private async deleteMessageBatch(messages: SQSMessage[]): Promise<void> {\n    debug('Deleting messages %s', messages.map((msg) => msg.MessageId).join(' ,'));\n\n    const deleteParams = {\n      QueueUrl: this.queueUrl,\n      Entries: messages.map((message) => ({\n        Id: message.MessageId,\n        ReceiptHandle: message.ReceiptHandle\n      }))\n    };\n\n    try {\n      await this.sqs\n        .deleteMessageBatch(deleteParams)\n        .promise();\n    } catch (err) {\n      throw toSQSError(err, `SQS delete message failed: ${err.message}`);\n    }\n  }\n\n  private async executeBatchHandler(messages: SQSMessage[]): Promise<void> {\n    try {\n      await this.handleMessageBatch(messages);\n    } catch (err) {\n      err.message = `Unexpected message handler failure: ${err.message}`;\n      throw err;\n    }\n  }\n\n  private async terminateVisabilityTimeoutBatch(messages: SQSMessage[]): Promise<PromiseResult<any, AWSError>> {\n    const params = {\n      QueueUrl: this.queueUrl,\n      Entries: messages.map((message) => ({\n        Id: message.MessageId,\n        ReceiptHandle: message.ReceiptHandle,\n        VisibilityTimeout: 0\n      }))\n    };\n    return this.sqs\n      .changeMessageVisibilityBatch(params)\n      .promise();\n  }\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"87ec361936b371dffa63ff930e837c447cbcf152","contentHash":"04b3df620a481ae634d523d6f5421fa0f5ded03bb5f0f5e740053104a6b231e1"},"/Users/spragn01/workspace/node/sqs-consumer/src/bind.ts":{"path":"/Users/spragn01/workspace/node/sqs-consumer/src/bind.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":73}},"3":{"start":{"line":8,"column":26},"end":{"line":8,"column":79}},"4":{"start":{"line":9,"column":4},"end":{"line":14,"column":7}},"5":{"start":{"line":10,"column":22},"end":{"line":10,"column":39}},"6":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"7":{"start":{"line":12,"column":12},"end":{"line":12,"column":48}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":28}}},"fnMap":{"0":{"name":"isMethod","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":17}},"loc":{"start":{"line":4,"column":39},"end":{"line":6,"column":1}},"line":4},"1":{"name":"autoBind","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":17}},"loc":{"start":{"line":7,"column":23},"end":{"line":15,"column":1}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":26},"end":{"line":9,"column":27}},"loc":{"start":{"line":9,"column":44},"end":{"line":14,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":11},"end":{"line":5,"column":72}},"type":"binary-expr","locations":[{"start":{"line":5,"column":11},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":72}}],"line":5},"1":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{"line":11,"column":8},"end":{"line":13,"column":9}}],"line":11}},"s":{"0":1,"1":1,"2":752,"3":47,"4":47,"5":752,"6":752,"7":658,"8":1},"f":{"0":752,"1":47,"2":752},"b":{"0":[752,705],"1":[658,94]},"inputSourceMap":{"version":3,"file":"/Users/spragn01/workspace/node/sqs-consumer/src/bind.ts","sources":["/Users/spragn01/workspace/node/sqs-consumer/src/bind.ts"],"names":[],"mappings":";;;AAAA,SAAS,QAAQ,CAAC,YAAoB,EAAE,KAAU;IAChD,OAAO,YAAY,KAAK,aAAa,IAAI,OAAO,KAAK,KAAK,UAAU,CAAC;AACvE,CAAC;AAED,SAAgB,QAAQ,CAAC,GAAW;IAClC,MAAM,aAAa,GAAG,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAC5E,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE;QACrC,MAAM,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;QAChC,IAAI,QAAQ,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE;YACjC,GAAG,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AARD,4BAQC","sourcesContent":["function isMethod(propertyName: string, value: any): boolean {\n  return propertyName !== 'constructor' && typeof value === 'function';\n}\n\nexport function autoBind(obj: object): void {\n  const propertyNames = Object.getOwnPropertyNames(obj.constructor.prototype);\n  propertyNames.forEach((propertyName) => {\n    const value = obj[propertyName];\n    if (isMethod(propertyName, value)) {\n      obj[propertyName] = value.bind(obj);\n    }\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"81818fb6551bceaa2fc7b88cc7fcdeb2786bc637","contentHash":"50482b21401f6989f41f106b895cf6284405d59c21cbfe4ada607916713174a6"},"/Users/spragn01/workspace/node/sqs-consumer/src/errors.ts":{"path":"/Users/spragn01/workspace/node/sqs-consumer/src/errors.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":23}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":42}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":28}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":23}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":31}},"7":{"start":{"line":15,"column":8},"end":{"line":15,"column":35}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":25},"end":{"line":8,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":50},"end":{"line":16,"column":5}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":16},"end":{"line":12,"column":48}},"type":"default-arg","locations":[{"start":{"line":12,"column":26},"end":{"line":12,"column":48}}],"line":12}},"s":{"0":1,"1":1,"2":13,"3":13,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":13,"1":1},"b":{"0":[1]},"inputSourceMap":{"version":3,"file":"/Users/spragn01/workspace/node/sqs-consumer/src/errors.ts","sources":["/Users/spragn01/workspace/node/sqs-consumer/src/errors.ts"],"names":[],"mappings":";;;AAAA,MAAM,QAAS,SAAQ,KAAK;IAQ1B,YAAY,OAAe;QACzB,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;IACpC,CAAC;CACF;AAWC,4BAAQ;AATV,MAAM,YAAa,SAAQ,KAAK;IAC9B,YAAY,OAAO,GAAG,sBAAsB;QAC1C,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;IAC7B,CAAC;CACF;AAIC,oCAAY","sourcesContent":["class SQSError extends Error {\n  code: string;\n  statusCode: number;\n  region: string;\n  hostname: string;\n  time: Date;\n  retryable: boolean;\n\n  constructor(message: string) {\n    super(message);\n    this.name = this.constructor.name;\n  }\n}\n\nclass TimeoutError extends Error {\n  constructor(message = 'Operation timed out.') {\n    super(message);\n    this.message = message;\n    this.name = 'TimeoutError';\n  }\n}\n\nexport {\n  SQSError,\n  TimeoutError\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6b644db1bce8da0f28ffdbc1ffe229b657aa0cd6","contentHash":"48f6a555ea98b7b9df27bff362f3c7205b1db78521332f5b12c2642da5578c10"}}